$CREATE COMMENT
*******************************************************************************
 
Test Name:  	EXT_REL_0_35_G
Test Level:     0
Series Name:    EXT_LEV_0
Date:  		July 5, 1994
Author:  	Scott Van Voris
Bug: 
Description:    This is a Level 0 test which is designed to verify that
		DROP TABLE drops the internal representation of the external
		table, but does NOT remove the external file.

		The external table is created, a tuple is inserted, the
		relation is SELECT'ed, the table is DROP'ped, the metadata
		in the database is displayed (there should be none), and
		the contents of the external file are displayed.
 
Expected Output:        Welcome to QLI
			Query Language Interpreter
			QLI> QLI> QLI> QLI>     EXT_TABLE
			        FIELD1            text, length 10
			    Stored in external file external.dat
 
			QLI> 
			  FIELD1
			==========
 
			Success   
 
			QLI> QLI> QLI> QLI> QLI> Procedure EXT_TABLE not found
 
			QLI> QLI> 
			Success   
History:
2-Oct-95:  Mark
  Removed the Cleanup / Setup comments from the test.
  Also, added WHERE_GDB and RUN drop_gdb to the tests.

3-Oct-95: Marco
  Added the WHERE_GDB_EXTERNAL, so the external file can be created 
  by the server in the correct place when accessing data remotely.
  Also, I removed any referance to DIR external.dat and TYPE external.dat
  which would also fail when running remotely.

10-Oct-99: Linda Begley
  Added rm_file.sh so that external file external.dat can be removed remotely.

*******************************************************************************

$CREATE create.gdl

DEFINE DATABASE "WHERE_GDB:ext_rel.gdb";

DEFINE RELATION ext_table EXTERNAL_FILE "WHERE_GDB_EXTERNAL:external.dat"
       field1 CHAR [10] ;

$CREATE qli.in

READY "WHERE_GDB:ext_rel.gdb";
INSERT INTO ext_table (field1) VALUES ("Success");
SHOW ext_table;
SELECT * FROM ext_table;

COMMIT;

DELETE RELATION ext_table;
SHOW ext_table;

$CREATE rm_file.sh
machine=`uname -s`
node=`uname -n`
echo $WHERE_GDB_EXTERNAL > awk.tst

echo $WHERE_GDB > ls.out
proto=`cut -c 1,2 ls.out`

if [ $machine = "Windows_NT" ] || [ $machine = "Windows_95" ] || [ $machine = "Windows_98" ]
   then 
      if [ $WHERE_GDB = $WHERE_GDB_EXTERNAL ]
        then  
           rm -f WHERE_GDB_EXTERNAL:external.dat 
        else
           if [ $proto = "//" ]
              then
              machine_name=`awk -F"/" '{print $3}' ls.out`
              else
              machine_name=`awk -F":" '{print $1}' ls.out` 
           fi
           echo `awk -F":" '{print $1}' awk.tst` > awk.out
           server_testbed=`cat awk.out`
           ls_string=//$machine_name/$server_testbed/testbed/external.dat
           rm -f $ls_string 
      fi
else
      if [ $WHERE_GDB = $WHERE_GDB_EXTERNAL ]
        then  
           rm -f WHERE_GDB_EXTERNAL:external.dat 
        else
           if [ $proto = "//" ]
              then
              machine_name=`awk -F"/" '{print $3}' ls.out`
              else
              machine_name=`awk -F":" '{print $1}' ls.out` 
           fi
           rsh $machine_name /bin/rm -f WHERE_GDB_EXTERNAL:external.dat
      fi
fi

$GDEF create.gdl
$QLI < qli.in
$RUN drop_gdb WHERE_GDB:ext_rel.gdb
$SH rm_file.sh
$DELETE COMMENT create.gdl rm_file.sh qli.in
